# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
workflows:
  version: 2
  build-and-deploy:
    jobs:
    
      - build:
      
        docker:
          - image: circleci/openjdk:8-jdk
          
        working_directory: ~/repo
    
        environment:
          MAVEN_OPTS: -Xmx3200m
        
        steps:
          - checkout
    
          - restore_cache:
              keys:
              - v1-dependencies-{{ checksum "pom.xml" }}
    
          - run: mvn dependency:go-offline
    
          - save_cache:
              paths:
                - ~/.m2
              key: v1-dependencies-{{ checksum "pom.xml" }}
            
          - run: mvn -s .circleci/settings.xml integration-test install
          
          - run: mvn sonar:sonar -Dsonar.organization=llaith-github -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=472ddb585abd168d7191ac1db7b896b23fe5a170
    
          - persist_to_workspace:
              <<: *source
      
      - deploy:
      
          requires:
            - build
            
          filters:
            branches:
              only: /^(master|verify)$/
              
          steps:
          
            - attach_workspace:
                at: .
                
            - run:
                name: Deploy to Artifactory
                command: mvn deploy                        
      
      - release:
          
          requires:
            - build
            
          filters:
            branches:
              only: /^release$/
                        
          steps:
            - checkout
            - run:
                name: Cut new release
                command: |
                  # assemble current and new version numbers
                  OLD_VERSION=$(mvn -s .circleci/settings.xml -q \
                    -Dexec.executable="echo" -Dexec.args='${project.version}' \
                    --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)
                  NEW_VERSION="${OLD_VERSION/-SNAPSHOT/}"
                  echo "Releasing $OLD_VERSION as $NEW_VERSION"
          
                  # ensure dependencies use release versions
                  mvn -s .circleci/settings.xml versions:use-releases
          
                  # write release version to POM
                  mvn -s .circleci/settings.xml versions:set -DnewVersion="$NEW_VERSION"
          
                  # setup git
                  git config user.name "Release Script"
                  git config user.email "builds@llaith.org"
          
                  # commit and tag
                  git add pom.xml
                  git commit -m "release: $NEW_VERSION"
                  git tag "$NEW_VERSION"
          
                  # land on master and publish
                  git checkout master
                  git merge --no-edit release
                  git push origin master --tags
          
                  # increment minor version number
                  MAJ_VERSION=$(echo "$NEW_VERSION" | cut -d '.' -f 1)
                  MIN_VERSION=$(echo "$NEW_VERSION" | cut -d '.' -f 2)
                  NEW_MINOR=$(($MIN_VERSION + 1))
                  DEV_VERSION="$MAJ_VERSION.$NEW_MINOR-SNAPSHOT"
          
                  # ready development branch
                  git checkout verify
                  git merge --no-edit release
                  mvn -s .circleci/settings.xml versions:set -DnewVersion="$DEV_VERSION"
                  git add pom.xml
                  git commit -m "ready for development: $DEV_VERSION"
                  git push origin verify
          
                  # clean up release branch
                  git push origin :release
                                          